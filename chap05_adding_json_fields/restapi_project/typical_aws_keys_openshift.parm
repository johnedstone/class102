AWS_ACCESS_KEY='access_key'
AWS_SECRET_KEY='secret_key'

# AWS Config
AWS_HTTPS_PROXY='https://ip:port'
AWS_HTTP_PROXY='http://ip:port'

PIP_PROXY=<ip:port>

APPLICATION_DOMAIN=fqdn
DJANGO_SECRET_KEY= # hashlib.sha1(os.urandom(128)).hexdigest()

SOURCE_REPOSITORY_URL=
SOURCE_REPOSITORY_REF=
CONTEXT_DIR=

# Setting users and tokens in "run" script so as not to rely on persistant database
SUPERUSER_USERNAME=someusername
SUPERUSER_PASSWORD=somepassword
SUPERUSER_TOKEN=somegeneratedtoken

# Setting client_id and token in "run" script so as not to rely on persistant database
#     i.e. you will always 'know' this and can give to your clients
# The client_id is created at your discretion and is used as username
# The Token can be generated as follows:
#     python -c "import binascii, os;binascii;print(binascii.hexlify(os.urandom(10)).decode())"
# How to use the token:
#     curl -vs -X [POST|GET] --header 'Content-Type: application/json' --header 'Accept: application/json' --header 'Authorization: Token a75e533453898571503363346eda985e709b080b'
USERS='client_id|token client_id2|token2'

## Optional
# DJANGO_DEBUG=
# ALLOWED_HOSTS=
# PROJECT_LOGGING_LEVEL= # WARNING|INFO
# SUCCESS_MSG_NEW_BUCKET=
# SUCCESS_MSG_PREEXISTING_BUCKET=
# AWS_NO_RESPONSE=
# AWS_ACL_DEFAULT=
# AWS_ACL_CHOICES=
# AWS_LOCATION_CONSTRAINT_CHOICES=
# AWS_BUCKET_NAME_COMPLIANT_MSG=
